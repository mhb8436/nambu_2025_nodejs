openapi: 3.0.0
info:
  title: Blog API
  version: 1.0.0
  description: 게시판 RESTful API

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    RegisterInput:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
            role:
              type: string
              enum: [admin, user]

    PostInput:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          description: 게시글 제목 (form-data의 title 필드)
        content:
          type: string
          description: 게시글 내용 (form-data의 content 필드)
        files:
          type: array
          description: 첨부 파일들 (form-data의 files 필드)
          items:
            type: string
            format: binary

    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        fileName:
          type: string
        attachments:
          type: array
          items:
            type: object
        author:
          $ref: '#/components/schemas/User'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, user]

    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        userId:
          type: integer
        postId:
          type: integer
        user:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

tags:
  - name: Auth
    description: 인증 관련 API
  - name: Posts
    description: 게시글 관련 API

paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: 회원가입
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterInput'
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /auth/login:
    post:
      tags: [Auth]
      summary: 로그인
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /posts:
    post:
      tags: [Posts]
      summary: 새 게시글 작성
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: 게시글 작성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    get:
      tags: [Posts]
      summary: 게시글 목록 조회
      security: []
      responses:
        '200':
          description: 게시글 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

  /posts/{id}:
    get:
      tags: [Posts]
      summary: 특정 게시글 조회
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 게시글 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    put:
      tags: [Posts]
      summary: 게시글 수정
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: 게시글 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      tags: [Posts]
      summary: 게시글 삭제
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 게시글 삭제 성공

  /posts/{postId}/comments:
    post:
      tags: [Posts]
      summary: 댓글 작성
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
      responses:
        '201':
          description: 댓글 작성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    get:
      tags: [Posts]
      summary: 댓글 목록 조회
      security: []
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 댓글 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'

  /posts/{postId}/comments/{id}:
    put:
      tags: [Posts]
      summary: 댓글 수정
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
      responses:
        '200':
          description: 댓글 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    delete:
      tags: [Posts]
      summary: 댓글 삭제
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 댓글 삭제 성공
